----------------------------------
--          exp01.vc              --
----------------------------------
int expressYourself() {
    1 + 2 + 3 + 4 + 5;
}

----------------------------------
--          exp02.vc              --
----------------------------------
int expressLane() {
    100 * 100 * 100 * 100 * (99 + 1);
}

----------------------------------
--          exp03.vc              --
----------------------------------
int expressionOfInterest() {
    0 / 0;
}

----------------------------------
--          k01.vc              --
----------------------------------
void brendon () {
}

----------------------------------
--          k02.vc              --
----------------------------------
void yellow_pages() {
    continue;
}

----------------------------------
--          k03.vc              --
----------------------------------
void shydney() {
        1 + 1;
}

----------------------------------
--          k04.vc              --
----------------------------------
void illegal ()
{
    0 / 0;
}
----------------------------------
--          k05.vc              --
----------------------------------
void weill() {
    0 * 0;
}

----------------------------------
--          k06.vc              --
----------------------------------
void paren() {
    (((((((( 0; ))))))));
}

----------------------------------
--          k07.vc              --
----------------------------------
void paren() {
    (((((((( 0 ))))))));
}

----------------------------------
--          k08.vc              --
----------------------------------
void orchestra() {
    if (1) 
        if (2) 
            ;
        else 
            ;
                
}

----------------------------------
--          k09.vc              --
----------------------------------
void twothousandandsix() {
    2 * 1000 + 6;
}

----------------------------------
--          k10.vc              --
----------------------------------
float macq() {
}

----------------------------------
--          k11.vc              --
----------------------------------
boolean edu() {
    int i;
}

----------------------------------
--          k12.vc              --
----------------------------------
void dexxa() {
    i = 2;
}

----------------------------------
--          k13.vc              --
----------------------------------
float k9() {
    int i;
    i = 2;
}

----------------------------------
--          k14.vc              --
----------------------------------
boolean toBeOrNotToBe() {
    boolean b;
    boolean notb;
    boolean thatIsTheQuestion;
    if (b) 
        if (notb)
            thatIsTheQuestion;
}

----------------------------------
--          t1.vc              --
----------------------------------
void A(){ }
----------------------------------
--          t10.vc              --
----------------------------------
int A() {
  int a;
  int b;
  int c;

  a = b[1] = c = 10;
}
----------------------------------
--          t11.vc              --
----------------------------------
int A() {

  if (a) {
    a = b = c = 10;
  } else {
    int i;
    i = 10;
  }
}
----------------------------------
--          t12.vc              --
----------------------------------
int A() {
  int i;

  i = 1;
  while (i <= 100) {
    if (i == 50) continue;  
    if (i == 77) break;  
    i = i + 1;
  }
return i;
}
----------------------------------
--          t13.vc              --
----------------------------------
int fact(int n) {
  if (n == 0) 
    return 1;
  else
    return n * fact(n-1);
}

void main() {
  putintln(10);
  return;
}
----------------------------------
--          t14.vc              --
----------------------------------
void A() { 
int a[10]; 
float f[4] = {1, 2, 3, 4};
}
----------------------------------
--          t15.vc              --
----------------------------------
void A() { 
int a[10], b[4] = {1, 2, 3, 4};
}
----------------------------------
--          t16.vc              --
----------------------------------
int A() {

  if (a) {
    a = b = c = 10;
  } else {
    int i;
    i = 10;
  }
}
----------------------------------
--          t17.vc              --
----------------------------------
int A() {
a[1] = 1;
}
----------------------------------
--          t18.vc              --
----------------------------------
int f(int a[]) {
}

int g(int a[10]) {
}

void main() {
    int a[10] = { 1, 2};
    f(a);
    g(a);
}
----------------------------------
--          t19.vc              --
----------------------------------
// the result type of the function A is missing
A() { }
----------------------------------
--          t2.vc              --
----------------------------------
void A() {
  a = b = c = 10;
  a;
}
----------------------------------
--          t20.vc              --
----------------------------------
// this program should compile if { is inserted after line 6
// and } before line 10. That is int j; i = j + 1; should be
// grouped in a block
void A() {
  int i;

  i = 1;
  while (i <= 200) 
    int j;
    i = j + 1;
}
----------------------------------
--          t21.vc              --
----------------------------------
// a declaration must appear before the statements
void A()
{
  i = 10;
  int i;
}
----------------------------------
--          t22.vc              --
----------------------------------
// the ; at the end of the declaration is missing
void A()
{
  int i
  i = 10;
}
----------------------------------
--          t23.vc              --
----------------------------------
// if misspelled as If
void main()
{
  If (100) x = 1;
}
----------------------------------
--          t24.vc              --
----------------------------------
// float is reserved and cannot be used as an id
void A() 
{
  int float;
}
----------------------------------
--          t25.vc              --
----------------------------------
// ; should be ,
void A(int i; int j) {
}
----------------------------------
--          t26.vc              --
----------------------------------
// 1.0 not allowed as the size of an array
void A() {
  int a[1.0];
}
----------------------------------
--          t27.vc              --
----------------------------------
// 2D arrays not supported
void A() {
  int a[10][10];
}
----------------------------------
--          t28.vc              --
----------------------------------
// the array size missing but syntactically *legal* by the VC grammar
// this will be detected as a semantic error in Assignment 4
void A() {
  int a[];
}
----------------------------------
--          t29.vc              --
----------------------------------
// invalid initialiser but syntactically *legal* by the VC grammar
// this will be detected as a semantic error in Assignment 4
void A() {
  int a[10] = 1;
}
----------------------------------
--          t3.vc              --
----------------------------------
void A(){}
int B(){}
float C(){}
----------------------------------
--          t30.vc              --
----------------------------------
// invalid initialiser but syntactically *legal* by the VC grammar
// this will be detected as a semantic error in Assignment 4
void A() {
  int a = {1, 2};
}
----------------------------------
--          t31.vc              --
----------------------------------
/* fibo.c -- It prints out the first N Fibonacci */

void main() {
    int n;        /* The number of fibonacci numbers we will print */
    int i;        /* The index of fibonacci number to be printed next */ 
    int current;  /* The value of the (i)th fibonacci number */
    int next;     /* The value of the (i+1)th fibonacci number */
    int twoaway;  /* The value of the (i+2)th fibonacci number */

    putString("How many Fibonacci numbers do you want to compute? ");
    n = getInt();
    if (n<=0)
       putString("The number should be positive.\n");
    else {
      putString("\n\n\tI \t Fibonacci(I) \n\t=====================\n");
      next = current = 1;
      for (i=1; i<=n; i=i+1) {
	putString("\t");
        putInt(i);
	putString("\t");
  	putIntLn(current);
	twoaway = current+next;
	current = next;
	next    = twoaway;
      }
    }
}

/* The output from a run of this program was:

How many Fibonacci numbers do you want to compute? 9

	I 	 Fibonacci(I) 
	=====================
	1 	   1
	2 	   1
	3 	   2
	4 	   3
	5 	   5
	6 	   8
	7 	   13
	8 	   21
	9 	   34

*/

----------------------------------
--          t4.vc              --
----------------------------------
void A(int i) {

}
----------------------------------
--          t5.vc              --
----------------------------------
void A(int i, boolean b, float f) {
  A(2,x);
}
----------------------------------
--          t6.vc              --
----------------------------------
int sub(int i) { }

void A() {
  int i;

  true;
  200;
  i;
  sub(2,3);
}
----------------------------------
--          t7.vc              --
----------------------------------
int i;

void A() {

// "invalid lvalue" in the following three assignments
// These semantic errors will be detected in Assignment 4.
// But these assignments are all syntactically legal by the VC grammar.

1 + 2 = a;

1 <= 2 = 1 + 2; 

1 = 2 = 3;

}
----------------------------------
--          t8.vc              --
----------------------------------
boolean f() {
 ++++---true;
} 


----------------------------------
--          t9.vc              --
----------------------------------
int a = 10;
float b[2] = { 1, 2}, f;
----------------------------------
--          var01.vc              --
----------------------------------
void a;
boolean b;
int i;
float f;

----------------------------------
--          var02.vc              --
----------------------------------
int i[];
/*
*/

----------------------------------
--          var03.vc              --
----------------------------------

int i[10];

----------------------------------
--          var04.vc              --
----------------------------------

int i[10] = 4;

----------------------------------
--          var05.vc              --
----------------------------------

int i[10] = {4};

----------------------------------
--          var06.vc              --
----------------------------------

int i[10] = {4, 8};

